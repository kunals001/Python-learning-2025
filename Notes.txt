// =================== Python Notes ========================= //

< -------------------- Print in python ---------------------- >

If you print something in python, it will print in the console.

print("Hello World"); // This will print "Hello World" in the console


// ==================== Variables ========================= //


< -------------------- Variable in python ---------------------- >

x = 5;  // This will create a variable called x and assign it the value 5

print(x); // This will print 5 in the console

y = "Hello World"; // This will create a variable called y and assign it the value "Hello World"

print(y); // This will print "Hello World" in the console

< --------------------- Valid Variable Names ------------------->

// Valid variable names
myvar = "John";
my_var = "John";
_my_var = "John";
myVar = "John";
MYVAR = "John";
myvar2 = "John";

// Invalid variable names
2myvar = "John";
my-var = "John";
my var = "John";


// ==================== Data Types ========================= //


< -------------------- String ---------------------- >

x = "Hello World"; // This will create a string variable called x and assign it the value "Hello World"

print(type(x)); // This will print <class 'str'> in the console

< -------------------- Integer ---------------------- >

x = 5; // This will create an integer variable called x and assign it the value 5

print(type(x)); // This will print <class 'int'> in the console

< -------------------- Float ---------------------- >

x = 5.0; // This will create a float variable called x and assign it the value 5.0

print(type(x)); // This will print <class 'float'> in the console

< -------------------- Boolean ---------------------- >

x = True; // This will create a boolean variable called x and assign it the value True

print(type(x)); // This will print <class 'bool'> in the console


< -------------------- Type Casting ---------------------- >

x = str(5); // This will create a string variable called x and assign it the value "5"

print(type(x)); // This will print <class 'str'> in the console

x = int(5.0); // This will create an integer variable called x and assign it the value 5

print(type(x)); // This will print <class 'int'> in the console

x = float(5); // This will create a float variable called x and assign it the value 5.0

print(type(x)); // This will print <class 'float'> in the console

x = bool(5); // This will create a boolean variable called x and assign it the value True

print(type(x)); // This will print <class 'bool'> in the console

< -------------------- Type Conversion ---------------------- >

x = 5; // This will create an integer variable called x and assign it the value 5

print(type(x)); // This will print <class 'int'> in the console

x = str(x); // This will create a string variable called x and assign it the value "5"

print(type(x)); // This will print <class 'str'> in the console

x = float(x); // This will create a float variable called x and assign it the value 5.0

print(type(x)); // This will print <class 'float'> in the console

x = bool(x); // This will create a boolean variable called x and assign it the value True

print(type(x)); // This will print <class 'bool'> in the console

// ===================== Multiples Variables ======================= //

x , y , z = 1 , 2 , 3;

print(x); // This will print 1 in the console
print(y); // This will print 2 in the console
print(z); // This will print 3 in the console

// ===================== Gloable Variables ======================= //

x = 5; // This will create a global variable called x and assign it the value 5

def myfunc():
    print(x); // This will print 5 in the console

myfunc();



def myfunc():
    global x
    x = "fantastic"
    print("Python is " + x)

myfunc()

print("Python is " + x)

// ======================== Python String Methods ======================= //

x = "Hello World"

print(x.upper()); // This will print "HELLO WORLD" in the console
print(x.lower()); // This will print "hello world" in the console
print(x.strip()); // This will print "Hello World" in the console
print(x.replace("H", "J")); // This will print "Jello World" in the console
print(x.split(" ")); // This will print ["Hello", "World"] in the console

< -------------------- Slicing ---------------------- >

x = "hello"

print(x[:4])  # This will print "hell" in the console not including the last index
print(x[2:])  # This will print "llo" in the console pointing to the last index

< -------------------- Format string ---------------------- >

age = 36 

txt = f"my name is John, and I am {age}" 
print(txt) 

txt = "my name is John, and I am {}"
print(txt.format(age))

< -------------------- Escape Character ---------------------- >

txt = "We are the so-called \"Vikings\" from the north."
print(txt)


// ======================= Python Operators ======================= //

< -------------------- Arithmetic Operators ---------------------- >

+ Addition      x + y  
- Subtraction   x - y  
* Multiplication x * y  
/ Division      x / y  
% Modulus       x % y  
** Exponent     x ** y  like x^y
// Floor Division x // y 


< -------------------- Assignment Operators ---------------------- >

=     x = 5
+=    x += 3
-=    x -= 3
*=    x *= 3
/=    x /= 3
%=    x %= 3


< -------------------- Comparison Operators ---------------------- >

== Equals       x == y
!= Not Equals   x != y
>  Greater Than   x > y
<  Less Than     x < y
>= Greater than or equal to   x >= y
<= Less than or equal to   x <= y


< -------------------- Logical Operators ---------------------- >

and   x < 5 and  x < 10  // returns true if both statements are true
or    x < 5 or x < 10  // returns true if one of the statements is true
not   not (x < 5 and x < 10) // returns false if both statements are true


< -------------------- Identity Operators ---------------------- >

is    x is y  // returns true if both variables are the same object
is not x is not y  // returns true if both variables are not the same object


< -------------------- Membership Operators ---------------------- >

in    x in y  // returns true if a sequence with the specified value is present in the object


< -------------------- Bitwise Operators ---------------------- >

&    x & y  // returns true if both statements are true
|    x | y  // returns true if one of the statements is true
^    x ^ y  // returns true if one of the statements is true but not both
~    ~x  // returns true if one of the statements is true but not both
<<   x << y  // returns true if one of the statements is true but not both
>>   x >> y  // returns true if one of the statements is true but not both


// ======================= Python Lists ======================= //

< -------------------- Lists ---------------------- >

x = ["apple", "banana", "cherry"]

print(x[1]) // This will print "banana" in the console

x = ["apple", "banana", "cherry"]

print(x[-1]) // This will print "cherry" in the console

x = ["apple", "banana", "cherry", "orange", "kiwi", "melon", "mango"]

print(x[2:5]) // This will print ["cherry", "orange", "kiwi"] in the console



< -------------------- Change list items ---------------------- >

x = ["apple", "banana", "cherry"]

x[1] = "blackcurrant"

print(x) // This will print ["apple", "blackcurrant", "cherry"] in the console

< ----------------------------- Insert ---------------------------- >

x = ["apple", "banana", "cherry"]

x.insert(2, "lemon")

print(x) // This will print ["apple", "banana", "lemon", "cherry"] in the console



< ---------------------------- Add items -------------------------- >

x = ["apple", "banana", "cherry"]

x.append("orange")

print(x) // This will print ["apple", "banana", "cherry", "orange"] in the console

< ---------------------------- Remove items -------------------------- >

x = ["apple", "banana", "cherry"]

x.remove("banana")

print(x) // This will print ["apple", "cherry"] in the console

< ---------------------------- Remove last item -------------------------- >

x = ["apple", "banana", "cherry"]

x.pop()

print(x) // This will print ["apple", "banana"] in the console

del x[0]

print(x) // This will print ["banana"] in the console

< ---------------------------- Sort items -------------------------- >

x = ["apple", "banana", "cherry"]

x.sort()

print(x) // This will print ["apple", "banana", "cherry"] in the console


< --------------------------- Loop through list -------------------------- >

x = ["apple", "banana", "cherry"]

for x in x:
    print(x) // This will print "apple", "banana", "cherry" in the console

for i in x:
    print(i[2]) // This will print "p", "a", "c" in the console

for i in range(len(x)):
    print(x[i]) // This will print "apple", "banana", "cherry" in the console    


< ------------------------ List Comprehension ------------------------ >

x = ["apple", "banana", "cherry"]

y = [x.upper() for x in x]

print(y) // This will print ["APPLE", "BANANA", "CHERRY"] in the console

for x in x:
    if "x" in x:
        print(x) // This will print "apple", "banana", "cherry" in the cons


< ------------------------ Copy a list ------------------------ >

x = ["apple", "banana", "cherry"]

y = list(x)

y = x.copy()

print(y) // This will print ["apple", "banana", "cherry"] in the console


< -------------------------- Join lists -------------------------- >

x = ["apple", "banana", "cherry"]
y = ["orange", "lemon", "kiwi"]

z = x + y

print(z) // This will print ["apple", "banana", "cherry", "orange", "lemon", "kiwi"] in the console



// ======================= Python Tuples ======================= //

< -------------------- Tuples ---------------------- >

x = ("apple", "banana", "cherry")

print(x[1]) // This will print "banana" in the console

x = ("apple", "banana", "cherry")

print(x[-1]) // This will print "cherry" in the console

< ------------------------- Change tuple items ----------------------- >

x = ("apple", "banana", "cherry")

y = list(x)

y[1] = "kiwi"

x = tuple(y)

print(x) // This will print ("apple", "kiwi", "cherry") in the console


< ------------------------- join tuples ----------------------- >

x = ("apple", "banana", "cherry")

y = ("orange", "lemon", "kiwi")

z = x + y

print(z) // This will print ("apple", "banana", "cherry", "orange", "lemon", "kiwi") in the console


// ====================== Python Sets ======================= //

< -------------------- Sets ---------------------- >

x = {"apple", "banana", "cherry"}

print(x) // This will print {"apple", "banana", "cherry"} in the console 

// sets are unordered and unchangeable and do not allow duplicates

< -------------------- Add items ---------------------- >

x = {"apple", "banana", "cherry"}

x.add("orange")

print(x) // This will print {"apple", "banana", "cherry", "orange"} in the console

< -------------------- Remove items ---------------------- >

x = {"apple", "banana", "cherry"}

x.remove("banana")

print(x) // This will print {"apple", "cherry"} in the console


< -------------------- Join sets ---------------------- >

x = {"apple", "banana", "cherry"}
y = {"google", "microsoft", "apple"}

z = x.union(y)

and 

z = x | y

print(z) // This will print {"apple", "banana", "cherry", "google", "microsoft"} in the console


// ======================= Python Dictionaries ======================= //

< -------------------- Dictionaries ---------------------- >

x = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}

print(x) // This will print {"brand": "Ford", "model": "Mustang", "year": 1964} in the console


< -------------------- Access items ---------------------- >

x = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}

print(x["brand"]) // This will print "Ford" in the console

< -------------------- Change values ---------------------- >

x = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}

x["year"] = 2020

print(x) // This will print {"brand": "Ford", "model": "Mustang", "year": 2020} in the console

< -------------------- Loop through a dictionary ---------------------- >

x = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}

for x in x:
    print(x) // This will print "brand", "model", "year" in the console

for x in x.values():
    print(x) // This will print "Ford", "Mustang", 1964 in the console


< -------------------- Add items ---------------------- >

x = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}

x["color"] = "red"

print(x) // This will print {"brand": "Ford", "model": "Mustang", "year": 1964, "color": "red"} in the console


< -------------------- Remove items ---------------------- >

x = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}

del x["model"]

print(x) // This will print {"brand": "Ford", "year": 1964} in the console


< -------------------- Copy dictionaries ---------------------- >

x = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964  
}

y = x.copy()

print(y) // This will print {"brand": "Ford", "model": "Mustang", "year": 1964} in the console


< -------------------- Join dictionaries ---------------------- >

x = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}

y = {
    "color": "red",
    "price": 35000,
    "year": 2020
}

z = {**x, **y}

print(z) // This will print {"brand": "Ford", "model": "Mustang", "year": 2020, "color": "red", "price": 35000} in the console

< -------------------- Nested Dictionaries ---------------------- >

x = {
    "brand": "Ford",
    "model": {
        "name": "Mustang",
        "year": 1964
    }
}

print(x) // This will print {"brand": "Ford", "model": {"name": "Mustang", "year": 1964}} in the console


// ====================Conditions and If statements ==================== //

< -------------------- If statements ---------------------- >

x = 5
y = 10

if x > y:
    print("x is greater than y")
elif x < y:
    print("x is less than y")
else:
    print("x is equal to y")

< -------------------- Nested If statements ---------------------- >

x = 5
y = 10

if x > y:
    print("x is greater than y")
else:
    if x < y:
        print("x is less than y")
    else:
        print("x is equal to y")


